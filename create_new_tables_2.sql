SET SCHEMA  "CONTRACT_MANAGEMENT";

-- Tabella unit√† di misura accounting
CREATE COLUMN TABLE "RA_ACCOUNTING_UM"(
	UM NVARCHAR(3),
	DESCRIPTION NVARCHAR(20),
	PRIMARY KEY (
		UM
	)
);

-- Testi stato testata RA
CREATE COLUMN TABLE "RA_DAILY_STATES_T"(
	ID_RA_DAILY_STATE INTEGER,
	SPRAS NVARCHAR(2),
	TEXT NVARCHAR(150),
	PRIMARY KEY (
		ID_RA_DAILY_STATE,
		SPRAS
	)
);

-- Tabella testata RA o annotazione
CREATE COLUMN TABLE "RA_DAILY_HEAD"(
    UUID_RA_DAILY_HEAD NVARCHAR(36),
    CS_DESCRIPTION NVARCHAR (50),
    ODA NVARCHAR(20),
    ID_CONTRACT NVARCHAR(20),
    PLANT NVARCHAR(4),
    ID_SUPPLIER NVARCHAR(50),
    DATE DATE,
    DOCUMENT_NAME NVARCHAR(100),
    ID_RA_DAILY_STATE INTEGER,
	
	ID_APPROVAL_STATUS INTEGER,--------- STATO APPROVAZIONE
    APPROVAL_NOTE NVARCHAR(100), -------------- EVENTUALE NOTA APPROVAZIONE
	SAVE_AND_SEND_BY NVARCHAR(100), ------------------------------------ UTENTE CHE HA SALVATO E INVIATO IL RA
    SAVE_AND_SEND_AT DATETIME, ------------------------------------ DATA SALVATAGGIO E INVIO DEL RA
	IS_SUPPLIER_RA NVARCHAR(1), ------------------------------------ FLAG CHE INDICA SE SI TRATTA DI UN RA O DI UN'ANNOTAZIONE
	UUID_SUPPLIER_RA_HEAD NVARCHAR(36), ------------------------------------ UUID TESTATA ORIGINALE DEL RA IN CASO DI ANNOTAZIONE
    CREATED_BY NVARCHAR(100), ------------------------------------ UTENTE CHE HA CREATO IL RA/L'ANNOTAZIONE
    CREATED_AT DATETIME, ------------------------------------ DATA CREAZIONE RA/ANNOTAZIONE
	UUID_GDL NVARCHAR(36), -------------------------------------- GDL DI RIFERIMENTO
	PRIMARY KEY (
	    UUID_RA_DAILY_HEAD
	)
);
-- Tabella posizione RA
CREATE COLUMN TABLE "RA_DAILY_DETAILS"(
    UUID_RA_DAILY_DETAIL NVARCHAR(36),
    UUID_RA_DAILY_HEAD NVARCHAR(36),
    ID_ODM NVARCHAR(20),  
    ID_ODM_OPERATION NVARCHAR(10),
    CS_DESCRIPTION NVARCHAR (50),
    ID_RA_DAILY_ODMOP_STATES INTEGER,
    TOTAL_ACCOUNTING DECIMAL(34, 5),
    CURRENCY_TOT NVARCHAR(3),
    ACCEPT_NOTE NVARCHAR(500),
    
    CREATED_BY NVARCHAR(100), 
    CREATED_AT DATETIME,
	
	IS_DELETED NVARCHAR(1), ------------------------------------ FLAG CHE INDICA LA CANCELLAZIONE LOGICA IN CASO DI ANNOTAZIONE
	UUID_SUPPLIER_RA_DETAIL NVARCHAR(36), ------------------------------------ UUID DETTAGLIO ODM/OP ORIGINALE DEL RA IN CASO DI ANNOTAZIONE. SE VIENE AGGIUNTO UN NUOVO ODM/OP (NON PRESENTE PRECEDENTEMENTE NEL RA DEL FORNITORE) SARA' VUOTO

	PRIMARY KEY (
	    UUID_RA_DAILY_DETAIL
	)
);

-- Tabella allegati singola posizione RA
CREATE COLUMN TABLE "RA_DAILY_DETAIL_ATTACH"(
    UUID_RA_DAILY_DETAIL_ATTACH NVARCHAR(36),
    UUID_RA_DAILY_DETAIL NVARCHAR(36),
    
    DOCUMENTAL_FILENAME NVARCHAR(300),
    FILE_LOCATION NVARCHAR(3), --SCP / OTX
    FILENAME NVARCHAR(200),
    UPLOADED_BY NVARCHAR(100),
    UPLOADED_AT DATETIME,
	
	IS_DELETED NVARCHAR(1), ------------------------------------ FLAG CHE INDICA LA CANCELLAZIONE LOGICA IN CASO DI ANNOTAZIONE
	UUID_SUPPLIER_RA_DETAIL_ATTACH NVARCHAR(36), ------------------------------------ UUID ALLEGATO ODM/OP ORIGINALE DEL RA IN CASO DI ANNOTAZIONE. SE VIENE AGGIUNTO UN NUOVO ALLEGATO (NON PRESENTE PRECEDENTEMENTE NEL RA DEL FORNITORE) SARA' VUOTO
	PRIMARY KEY (
	    UUID_RA_DAILY_DETAIL_ATTACH
	)
);

-- Tabella note singola posizione RA
CREATE COLUMN TABLE "RA_DAILY_DETAIL_NOTES"(
    UUID_RA_DAILY_DETAIL_NOTE NVARCHAR(36),
    UUID_RA_DAILY_DETAIL NVARCHAR(36),
    TEXT NVARCHAR (250),
    CREATED_BY NVARCHAR(100),
    CREATED_AT DATETIME,

	IS_DELETED NVARCHAR(1), ------------------------------------ FLAG CHE INDICA LA CANCELLAZIONE LOGICA IN CASO DI ANNOTAZIONE
	UUID_SUPPLIER_RA_DETAIL_ATTACH NVARCHAR(36), ------------------------------------ UUID NOTA ODM/OP ORIGINALE DEL RA IN CASO DI ANNOTAZIONE. SE VIENE AGGIUNTA UNA NUOVA NOTA (NON PRESENTE PRECEDENTEMENTE NEL RA DEL FORNITORE) SARA' VUOTO
	
	PRIMARY KEY (
	    UUID_RA_DAILY_DETAIL_NOTE
	)
);

-- Tabella lavoratore singola posizione RA
CREATE COLUMN TABLE "RA_DAILY_DETAIL_WORKER"(
    UUID_RA_DAILY_DETAIL_WORKER NVARCHAR(36),
    UUID_RA_DAILY_DETAIL NVARCHAR(36),
    ID_WORKER NVARCHAR(50),
    TIME1_BEG DATETIME,
    TIME1_END DATETIME,
    TIME2_BEG DATETIME,
    TIME2_END DATETIME,
    TIME_BREAK DATETIME,
    TOTAL_HOURS INTEGER,
    
    CREATED_BY NVARCHAR(100),
    CREATED_AT DATETIME,
	
	IS_DELETED NVARCHAR(1), ------------------------------------ FLAG CHE INDICA LA CANCELLAZIONE LOGICA IN CASO DI ANNOTAZIONE
	UUID_SUPPLIER_RA_DETAIL_WORKER NVARCHAR(36), ------------------------------------ UUID LAVORATORE ODM/OP ORIGINALE DEL RA IN CASO DI ANNOTAZIONE. SE VIENE AGGIUNTO UN NUOVO LAVORATORE (NON PRESENTE PRECEDENTEMENTE NEL RA DEL FORNITORE) SARA' VUOTO
	
	PRIMARY KEY (
	    UUID_RA_DAILY_DETAIL_WORKER
	)
);

-- Tabella veicoli singola posizione RA
CREATE COLUMN TABLE "RA_DAILY_DETAIL_VEHICLE"(
    UUID_RA_DAILY_DETAIL_VEHICLE NVARCHAR(36),
    UUID_RA_DAILY_DETAIL NVARCHAR(36),
    ID_VEHICLE NVARCHAR(50),
    TIME1_BEG DATETIME,
    TIME1_END DATETIME,
    TIME2_BEG DATETIME,
    TIME2_END DATETIME,
    TIME_BREAK DATETIME,
    TOTAL_HOURS INTEGER,
    
    CREATED_BY NVARCHAR(100),
    CREATED_AT DATETIME,
	
	IS_DELETED NVARCHAR(1), ------------------------------------ FLAG CHE INDICA LA CANCELLAZIONE LOGICA IN CASO DI ANNOTAZIONE
	UUID_SUPPLIER_RA_DETAIL_VEHICLE NVARCHAR(36), ------------------------------------ UUID VEICOLO ODM/OP ORIGINALE DEL RA IN CASO DI ANNOTAZIONE. SE VIENE AGGIUNTO UN NUOVO VEICOLO (NON PRESENTE PRECEDENTEMENTE NEL RA DEL FORNITORE) SARA' VUOTO
	
	PRIMARY KEY (
	    UUID_RA_DAILY_DETAIL_VEHICLE
	)
);


-- Tabella attrezzature singola posizione RA
CREATE COLUMN TABLE "RA_DAILY_DETAIL_EQUIPMENT"(
    UUID_RA_DAILY_DETAIL_EQUIPMENT NVARCHAR(36),
    UUID_RA_DAILY_DETAIL NVARCHAR(36),
    ID_EQUIPMENT NVARCHAR(50),
    TIME1_BEG DATETIME,
    TIME1_END DATETIME,
    TIME2_BEG DATETIME,
    TIME2_END DATETIME,
    TIME_BREAK DATETIME,
    TOTAL_HOURS INTEGER,
    
    CREATED_BY NVARCHAR(100),
    CREATED_AT DATETIME,
	
	IS_DELETED NVARCHAR(1), ------------------------------------ FLAG CHE INDICA LA CANCELLAZIONE LOGICA IN CASO DI ANNOTAZIONE
	UUID_SUPPLIER_RA_DETAIL_EQUIPMENT NVARCHAR(36), ------------------------------------ UUID ATTREZZATURA ODM/OP ORIGINALE DEL RA IN CASO DI ANNOTAZIONE. SE VIENE AGGIUNTO UNA NUOVA ATTREZZATURA (NON PRESENTE PRECEDENTEMENTE NEL RA DEL FORNITORE) SARA' VUOTO

	PRIMARY KEY (
	    UUID_RA_DAILY_DETAIL_EQUIPMENT
	)
);

-- Creazione tabella Relazione OdA/OdM/Contratto
CREATE COLUMN TABLE "REL_ODM_ODA_CONTRACT"(
    ID_ODM NVARCHAR(20),  
    ID_ODM_OPERATION NVARCHAR(10),
    ODA NVARCHAR(20),
    ID_CONTRACT NVARCHAR(20),
    SUPPLIER NVARCHAR(50),
    CONTRACT_OBJECT NVARCHAR (200),
    ODA_DESCRIPTION NVARCHAR (200),
    ODM_DESCRIPTION NVARCHAR (200),
    OPERATION_DESCRIPTION NVARCHAR (200),
    CS_DESCRIPTION NVARCHAR (50),
    PLANT NVARCHAR(4),
    SUPPLIER_NAME NVARCHAR(100),
	PRIMARY KEY (
		ID_ODM,
		ID_ODM_OPERATION
	)
);

-- Creazione tabella Centri di lavoro
CREATE COLUMN TABLE "WORK_CENTERS"(
    WORK_CENTER NVARCHAR(20),  
    PLANT NVARCHAR(4),
    WORK_CENTER_DESC NVARCHAR(50),
	PRIMARY KEY (
		WORK_CENTER,
		PLANT
	)
);

-- Creazione tabella Operazioni OdM
CREATE COLUMN TABLE "ODM_OPERATIONS"(
    ID_ODM NVARCHAR(20),  
    ID_ODM_OPERATION NVARCHAR(10),        
    RECIPIENT_SCP NVARCHAR(50),
    ODM_DESCRIPTION NVARCHAR (200),
    OPERATION_DESCRIPTION NVARCHAR (200),
	PRIMARY KEY (
		ID_ODM,
		ID_ODM_OPERATION
	)
);

/* Customizing Table */
CREATE COLUMN TABLE "CUSTCONFIG_T"(
    APPLICATION_NAME NVARCHAR(20),  
    OBJECT_KEY NVARCHAR(50),        
    LOW NVARCHAR(250),
    HIGH NVARCHAR(250),
    SIGN NVARCHAR(1),
    OPTION NVARCHAR(2),
    ACTIVE NVARCHAR(1),
	PRIMARY KEY (
		APPLICATION_NAME,
		OBJECT_KEY
	)
);

/* Enqueue table */
CREATE COLUMN TABLE "ENQUEUE_T"(
    OBJECT_KEY NVARCHAR(50),        --oggetto bloccato (es. COD.CONTRATTO + FORNITORE "80000010_211111111")
    APPLICATION_NAME NVARCHAR(20),  --applicazione su cui viene eseguito il blocco
    LOCK_TIMESTAMP DATETIME,        --data/ora blocco
    UNLOCK_TIMESTAMP DATETIME,      --data/ora sblocco
    USERNAME NVARCHAR(20),          --utente che ha bloccato l'oggetto
    NAME NVARCHAR(50),              --nome utente che ha bloccato l'oggetto
    SURNAME NVARCHAR(50),           --cognome utente che ha bloccato l'oggetto
	PRIMARY KEY (
		OBJECT_KEY,
		APPLICATION_NAME
	)
);

/* Worker */
CREATE COLUMN TABLE "WORKER_ROLES_T"(
	ID_WORKER_ROLE_T INTEGER,
	SPRAS NVARCHAR(2),
	TEXT NVARCHAR(150),
	PRIMARY KEY (
		ID_WORKER_ROLE_T,
		SPRAS
	)
);
CREATE COLUMN TABLE "WORKER_ROLES"(
	ID_WORKER_ROLE INTEGER,
	ID_WORKER_ROLE_T INTEGER,
	PRIMARY KEY (
		ID_WORKER_ROLE
	)
);
CREATE COLUMN TABLE "WORKER_CONTRACT_TYPES_T"(
	ID_WORKER_CONTRACT_TYPE_T INTEGER,
	SPRAS NVARCHAR(2),
	TEXT NVARCHAR(50),
	PRIMARY KEY (
		ID_WORKER_CONTRACT_TYPE_T,
		SPRAS
	)
);
CREATE COLUMN TABLE "WORKER_CONTRACT_TYPES"(
	ID_WORKER_CONTRACT_TYPE INTEGER,
	ID_WORKER_CONTRACT_TYPE_T INTEGER,
	PRIMARY KEY (
		ID_WORKER_CONTRACT_TYPE
	)
);
CREATE COLUMN TABLE "WORKERS"(
	ID_WORKER NVARCHAR(50),
	NAME NVARCHAR(50),
	SURNAME NVARCHAR(50),
	DATE_BIRTH DATE,
	GENDER NVARCHAR(1),
	RESIDENCE NVARCHAR(2),
	ID_WORKER_CONTRACT_TYPE INTEGER,
	CONTRACT_EXPIRED_DATE DATE,
	CUSTOM_ROLES NVARCHAR(200),
	CUSTOM_QUALIFICATIONS NVARCHAR(200),
	EU_CITIZEN INTEGER,
	DPI_III_LEVEL INTEGER,
	CREATED_BY NVARCHAR(20),
	CHANGED_BY NVARCHAR(20),
	PRIMARY KEY (
		ID_WORKER
	)
);
CREATE COLUMN TABLE "QUALIFICATIONS_T"(
	ID_QUALIFICATION_T INTEGER,
	SPRAS NVARCHAR(2),
	TEXT NVARCHAR(500),
	PRIMARY KEY (
		ID_QUALIFICATION_T,
		SPRAS
	)
);
CREATE COLUMN TABLE "QUALIFICATIONS"(
	ID_QUALIFICATION INTEGER,
	ID_QUALIFICATION_T INTEGER,
	PRIMARY KEY (
		ID_QUALIFICATION
	)
);
/*Mezzi*/
CREATE COLUMN TABLE "VEHICLES"(
	ID_VEHICLES NVARCHAR(15),
	BRAND       NVARCHAR(50),
	ID_VEHICLES_TYPE INTEGER,
	FILENAME_IMAGE NVARCHAR(150),
	CREATED_BY NVARCHAR(20),
	CHANGED_BY NVARCHAR(20),
	PRIMARY KEY (
	    ID_VEHICLES
	)
);

CREATE COLUMN TABLE "VEHICLES_TYPES"(
	ID_VEHICLES_TYPE INTEGER,
	ID_VEHICLES_TYPES_T INTEGER,
	PRIMARY KEY (
		ID_VEHICLES_TYPE
	)
);

CREATE COLUMN TABLE "VEHICLES_TYPES_T"(
	ID_VEHICLES_TYPES_T INTEGER,
	SPRAS NVARCHAR(2),
	TEXT NVARCHAR(100),
	PRIMARY KEY (
		ID_VEHICLES_TYPES_T,
		SPRAS
	)
);
/*---------------------------------------------------------*/

/*Attrezzature*/
CREATE COLUMN TABLE "EQUIPMENT"(
	ID_EQUIPMENT NVARCHAR(15), 
	DESCRIPTION NVARCHAR(100),
	MANUFACTURER       NVARCHAR(50),
	MODEL NVARCHAR(50),
	YEAR_OF_COSTRUCTION DATE,
	EDUCATION_BOOKLET INTEGER,
    MAINTENANCE_BOOKLET INTEGER,
    MATRICULAR_BOOKLET INTEGER,
    CE_BRAND INTEGER,
    DECLARATION_OF_CONFORMITY INTEGER,
    ASL_SERIAL INTEGER,
    EXTERNAL_VERIFICATION INTEGER,
    CREATED_BY NVARCHAR(20),
    CHANGED_BY NVARCHAR(20),
	PRIMARY KEY (
	    ID_EQUIPMENT
	)
);

/*---------------------------------------------------------*/

CREATE COLUMN TABLE "SUPPLIERS"(
    ID_UNIQUE_SUP INTEGER,
    
	ID_SUPPLIER NVARCHAR(50),
	CUI NVARCHAR(20),
	
	SUPPLIER_NAME NVARCHAR(100),
	PRIMARY KEY (
		ID_UNIQUE_SUP
	)
);
CREATE COLUMN TABLE "DOC_TYPES_T"(
	ID_DOC_TYPES_T INTEGER,
	SPRAS NVARCHAR(2),
	TEXT NVARCHAR(50),
	PRIMARY KEY (
		ID_DOC_TYPES_T,
		SPRAS
	)
);
CREATE COLUMN TABLE "DOC_TYPES"(
	ID_DOC_TYPES INTEGER,
	ID_DOC_TYPES_T INTEGER,
	RELATED_TO NVARCHAR(15),
	PRIMARY KEY (
		ID_DOC_TYPES
	)
);
CREATE COLUMN TABLE "DOCUMENTS"(
	ID_DOCUMENT INTEGER,
	
	ID_UNIQUE_SUP INTEGER,  --emittente fattura relativo al singolo documento
	
	ID_DOC_TYPE INTEGER,
	ID_COMMON_DOCUMENTS INTEGER,
	ID_WORKER NVARCHAR(50),
	ID_VEHICLE NVARCHAR(15),
	ID_EQUIPMENT NVARCHAR(15),
	TITLE NVARCHAR(200),
	DESCRIPTION NVARCHAR(800),
	ID_CONTRACT NVARCHAR(20),
	TYPE_OF_ADDITION NVARCHAR(3),
	VISIBLE_IN_AC NVARCHAR(1), --DA VERIFICARE 
	PRIMARY KEY (
		ID_DOCUMENT
	)
);

CREATE COLUMN TABLE "GREEN_SHEETS"(
	ID_GREEN_SHEET INTEGER,
	ID_CONTRACT NVARCHAR(20),
	
	ID_UNIQUE_SUP INTEGER,
	
	FILENAME_PDF NVARCHAR(100), 
    IS_ACTIVE_VERSION NVARCHAR(1),
    MODIFIED_DOC NVARCHAR(1),
	VERSION INTEGER,
	CREATION_DATE DATETIME,
	CREATION_USER NVARCHAR(20),
	
	PRIMARY KEY (
		ID_GREEN_SHEET
	)
);

CREATE COLUMN TABLE "COMMON_DOCUMENTS"(
	ID_COMMON_DOCUMENTS INTEGER,
	ID_DOC_TYPES INTEGER,
	TITLE NVARCHAR(200),
	DESCRIPTION NVARCHAR(800),
	LISTA_PDF NVARCHAR(1),
	PRIMARY KEY (
		ID_COMMON_DOCUMENTS
	)
);
CREATE COLUMN TABLE "REL_PLANT_COMMON_DOC "(
	ID_COMMON_DOCUMENTS INTEGER,
	PLANT NVARCHAR(4),
	PRIMARY KEY (
		ID_COMMON_DOCUMENTS,
		PLANT
	)
);
-- tabella sostitutiva a quella precedente poich√® in data 14/01/2019 in test si sono avuti problemi 
CREATE COLUMN TABLE "REL_PLANT_COMMON_DOC2"(
	ID_COMMON_DOCUMENTS INTEGER,
	PLANT NVARCHAR(4),
	PRIMARY KEY (
		ID_COMMON_DOCUMENTS,
		PLANT
	)
);
CREATE COLUMN TABLE "ATTACHMENT_STATUS_T"(
	ID_ATTACHMENT_STATUS_T INTEGER,
	SPRAS NVARCHAR(2),
	TEXT NVARCHAR(50),
	PRIMARY KEY (
		ID_ATTACHMENT_STATUS_T,
		SPRAS
	)
);
CREATE COLUMN TABLE "ATTACHMENT_STATUS"(
	ID_ATTACHMENT_STATUS INTEGER,
	ID_ATTACHMENT_STATUS_T INTEGER,
	PRIMARY KEY (
		ID_ATTACHMENT_STATUS
	)
);
CREATE COLUMN TABLE "ATTACHMENTS"(
	ID_ATTACHMENT INTEGER,
	FILENAME NVARCHAR(250),
	EXPIRED_DATE DATE,
	ID_ATTACHMENT_STATUS INTEGER,
	UPLOAD_DATE DATETIME,
	UPLOAD_USER NVARCHAR(20),
	APPROVAL_DATE DATETIME,
	APPROVAL_USER NVARCHAR(20),
	
	DELETING_DATE DATETIME,
	DELETING_USER NVARCHAR(20),
	DOC_ON_OPENTEXT NVARCHAR(1),
	ID_OPEN_TEXT INTEGER,
	IS_ACTIVE_VERSION NVARCHAR(1),
	VERSION INTEGER,
	
	IS_ACTIVE_AF NVARCHAR(1), --Verificare utilit√†
	IS_ACTIVE_AC NVARCHAR(1), --Verificare utilit√†
	UPLOAD_FROM NVARCHAR(1),
	ID_DOCUMENT INTEGER,      --Verificare utilit√†
	ID_CONTRACT NVARCHAR(50), --Verificare utilit√†
	PRIMARY KEY (
		ID_ATTACHMENT
	)
);
CREATE COLUMN TABLE "CONTRACTS"(
	ID_CONTRACT NVARCHAR(20),
	
	ID_UNIQUE_SUP INTEGER,   --da verificare
    SPECIFIC_OF_CONTRACT NVARCHAR(50),
    
	PERIMETER NVARCHAR(50),
	TYPE_OF_CONTRACT NVARCHAR(10),
	SUBJECT NVARCHAR(250),
	START_VALIDITY_DATE DATE,
	END_VALIDITY_DATE DATE,
	TOTAL_CONTRACT DECIMAL(10, 2),
	RES_CONTRACT DECIMAL(10, 2),
	DOC_DATE DATE,
	PERFECTION_DATE DATE,
	POS_INAIL NVARCHAR(20),
    POS_INPS NVARCHAR(20),
    CONSTRUCTION_WORKER_SOCIAL_SECURITY NVARCHAR(20),
    ROLE_RSPP NVARCHAR(50),
    ROLE_RLS NVARCHAR(50),
    ROLE_RESPONSIBLE NVARCHAR(50),
    ROLE_CONSTRUCTION_FOREMAN NVARCHAR(50),
    ROLE_FIRE_PREVENTION NVARCHAR(50),
    ROLE_FIRST_AID NVARCHAR(50),
    ROLE_COMPETENT_DOCTOR NVARCHAR(50),
    CONTACT_NAME NVARCHAR(50),
    CONTACT_SURNAME NVARCHAR(50),
    CONTACT_TELEPHONE NVARCHAR(50),
    CONTACT_EMAIL NVARCHAR(50),
    PLANT NVARCHAR(4),
	PRIMARY KEY (
		ID_CONTRACT,
		ID_UNIQUE_SUP
	)
);

CREATE COLUMN TABLE "FORCED_COMPLETED_DOC"( 
	ID_CONTRACT NVARCHAR(20),
	
	ID_UNIQUE_SUP INTEGER,
	
	ID_DOC_TYPES INT,
	PRIMARY KEY (
		ID_CONTRACT,
		ID_UNIQUE_SUP,
		ID_DOC_TYPES
	)
);

CREATE COLUMN TABLE "CONTRACT_ASS_STATUS_T"(
	ID_CONTRACT_ASS_STATUS_T INTEGER,
	SPRAS NVARCHAR(2),
	TEXT NVARCHAR(50),
	PRIMARY KEY (
		ID_CONTRACT_ASS_STATUS_T,
		SPRAS
	)
);
CREATE COLUMN TABLE "CONTRACT_ASS_STATUS"(
	ID_CONTRACT_ASS_STATUS INTEGER,
	ID_CONTRACT_ASS_STATUS_T INTEGER,
	PRIMARY KEY (
		ID_CONTRACT_ASS_STATUS
	)
);
CREATE COLUMN TABLE "CONTRACT_ASSOCIATIONS"(
	ID_CONTRACT_ASSOCIATION INTEGER,
	START_ASS_DATE DATE,
	END_ASS_DATE DATE,
	ID_CONTRACT_PDF_ATTACHMENT NVARCHAR(100),
	ID_CONTRACT NVARCHAR(20),
	ID_CONTRACT_ASS_STATUS INTEGER,
	IS_ACTIVE_VERSION NVARCHAR(1),
    NAME_4TITLE NVARCHAR(100),
    SURNAME_4TITLE NVARCHAR(100),
    EMAIL_4TITLE NVARCHAR(100),
	VERSION INTEGER,
	PRIMARY KEY (
		ID_CONTRACT_ASSOCIATION
	)
);
CREATE COLUMN TABLE "CONTRACT_SUPERVISORS"(
	ID_CONTRACT_SUPERVISORS NVARCHAR(15),
	NAME NVARCHAR(100),
	SURNAME NVARCHAR(100),
	EMAIL NVARCHAR(100),
	IS_CS NVARCHAR(1),
	IS_ASSISTANT_CS_SIC NVARCHAR(1),
	IS_ASSISTANT_CS_AMM NVARCHAR(1),
	IS_ASSISTANT_CS_MAN NVARCHAR(1),
	PRIMARY KEY (
		"ID_CONTRACT_SUPERVISORS"
	)
);
CREATE COLUMN TABLE "CS_ROLES_T"(
	ID_CS_ROLE_T INTEGER,
	SPRAS NVARCHAR(2),
	TEXT NVARCHAR(50),
	PRIMARY KEY (
		ID_CS_ROLE_T,
		SPRAS
	)
);
CREATE COLUMN TABLE "CS_ROLES"(
	ID_CS_ROLE INTEGER,
	ID_CS_ROLE_T INTEGER,
	PRIMARY KEY (
		ID_CS_ROLE
	)
);
CREATE COLUMN TABLE "CONTRACT_ASSOCIATION_DETAILS"(
	ID_CONTRACT_ASSOCIATION_DETAIL INTEGER,
	ID_CONTRACT_SUPERVISORS NVARCHAR(15),
	ID_CS_ROLE INTEGER,
	ID_CONTRACT_ASSOCIATION INTEGER,
	START_ASS_DATE DATE,
	END_ASS_DATE DATE,
	IS_CS_MAIN NVARCHAR(1),
	INACTIVE_ASSOCIATION NVARCHAR(1),
	PRIMARY KEY (
		ID_CONTRACT_ASSOCIATION_DETAIL
	)
);
CREATE COLUMN TABLE "REL_DOCUMENT_ATTACHMENTS"(
	ID_DOCUMENT INTEGER,
	ID_ATTACHMENT INTEGER,
	UPLOAD_FROM NVARCHAR(1),
	ID_CONTRACT_OF_REL NVARCHAR(50),
	NOTA_RIFIUTO NVARCHAR(1000),
	PRIMARY KEY (
		ID_DOCUMENT,
		ID_ATTACHMENT,
		ID_CONTRACT_OF_REL
	)
);
CREATE COLUMN TABLE "REL_DOCUMENT_RTS_CONTRACT"(
	ID_DOCUMENT INTEGER,
	
	ID_UNIQUE_SUP INTEGER,
	
	ID_CONTRACT NVARCHAR(20),
	PRIMARY KEY (
		ID_DOCUMENT,
		ID_UNIQUE_SUP,
		ID_CONTRACT
	)
);
CREATE COLUMN TABLE "REL_SUPPLIER_WORKER"(
	ID_UNIQUE_SUP INTEGER,
	
	ID_WORKER NVARCHAR(50),
	VALIDATED_BY NVARCHAR(100),
	STATUS INTEGER,
	PRIMARY KEY (
		ID_UNIQUE_SUP,
		ID_WORKER
	)
);
CREATE COLUMN TABLE "REL_SUPPLIER_VEHICLES"(
	ID_UNIQUE_SUP INTEGER,
	
	ID_VEHICLES NVARCHAR(50),
	VALIDATED_BY NVARCHAR(100),
	STATUS INTEGER,
	PRIMARY KEY (
		ID_UNIQUE_SUP,
		ID_VEHICLES
	)
);
CREATE COLUMN TABLE "REL_SUPPLIER_EQUIPMENT"(
	ID_UNIQUE_SUP INTEGER,
	
	ID_EQUIPMENT NVARCHAR(15),
	VALIDATED_BY NVARCHAR(100),
	STATUS INTEGER,
	PRIMARY KEY (
		ID_UNIQUE_SUP,
		ID_EQUIPMENT
	)
);
CREATE COLUMN TABLE "REL_CONTRACT_WORKER"(
	ID_UNIQUE_SUP INTEGER,
	
	ID_WORKER NVARCHAR(50),
	ID_CONTRACT NVARCHAR(20),
	ID_STATUS INTEGER,
	APPROVAL_DATE TIMESTAMP,
    APPROVAL_USER NVARCHAR(20),
	PRIMARY KEY (
		ID_UNIQUE_SUP,
		ID_WORKER,
		ID_CONTRACT
	)
);

CREATE COLUMN TABLE "REL_CONTRACT_VEHICLE"(
	ID_UNIQUE_SUP INTEGER,
	
	ID_VEHICLE NVARCHAR(15),
	ID_CONTRACT NVARCHAR(20),
	ID_STATUS INTEGER,
	APPROVAL_DATE TIMESTAMP,
    APPROVAL_USER NVARCHAR(20),
	PRIMARY KEY (
		ID_UNIQUE_SUP,
		ID_VEHICLE,
		ID_CONTRACT
	)
);

CREATE COLUMN TABLE "REL_CONTRACT_EQUIPMENT"(
	ID_UNIQUE_SUP INTEGER,
	
	ID_EQUIPMENT NVARCHAR(15),
	ID_CONTRACT NVARCHAR(20),
	ID_STATUS INTEGER,
	APPROVAL_DATE TIMESTAMP,
    APPROVAL_USER NVARCHAR(20),
	PRIMARY KEY (
		ID_UNIQUE_SUP,
		ID_EQUIPMENT,
		ID_CONTRACT
	)
);

CREATE COLUMN TABLE "REL_WORKER_QUALIFICATIONS"(
	ID_WORKER NVARCHAR(50),
	ID_QUALIFICATION INTEGER,
	PRIMARY KEY (
		ID_WORKER,
		ID_QUALIFICATION
	)
);
CREATE COLUMN TABLE "REL_WORKER_ROLES"
(
    ID_WORKER                           NVARCHAR(50),
    ID_WORKER_ROLES                     INTEGER,
    PRIMARY KEY (ID_WORKER, ID_WORKER_ROLES)
);
CREATE COLUMN TABLE "REL_MAXIMAL_DOCUMENT"
(
    ID_DOCUMENT                     INTEGER,
    ID_ATTACHMENT                   INTEGER,
    ID_UNIQUE_SUP                   INTEGER,
    ID_CONTRACT                     NVARCHAR(20),
    UPLOAD_FROM                     NVARCHAR(1),
    MAXIMAL_RCT                     DECIMAL(10, 2),
    MAXIMAL_RCO                     DECIMAL(10, 2),
    PRIMARY KEY (ID_DOCUMENT, ID_ATTACHMENT, ID_UNIQUE_SUP, ID_CONTRACT)
);


-- CREATE COLUMN TABLE "REL_USER_AFNAM"(
--     ID_REL_USER_AFNAM INTEGER,
-- 	USERMANE NVARCHAR(20),
-- 	AFNAM NVARCHAR(12),
	
-- 	PRIMARY KEY (
-- 		ID_REL_USER_AFNAM
-- 	)
-- );

CREATE COLUMN TABLE "REL_USER_UB"(
    ID_REL_USER_UB INTEGER,
	USERMANE NVARCHAR(20),
	ID_UB INTEGER,
	
	PRIMARY KEY (
		ID_REL_USER_UB
	)
);


CREATE COLUMN TABLE "REL_UB_TO_AFNAM"(
    ID_UB INTEGER,
	AFNAM NVARCHAR(12),
	
    UB_DESC NVARCHAR(50),
	AFNAM_DESC NVARCHAR(50),
	PLANT NVARCHAR(10),
	PLANT_DESC NVARCHAR(50),
	
	PRIMARY KEY (
		ID_UB,
		AFNAM
	)
);

------------- APP GROUP MANAGEMENT ----------------
CREATE COLUMN TABLE "GROUPS"(
    ID_GROUP    NVARCHAR(36),
    NAME        NVARCHAR(50),
    DESCRIPTION NVARCHAR(100),
    PLANT       NVARCHAR(4),
    WORK_CENTER NVARCHAR(30)
	
	PRIMARY KEY (
		ID_GROUP
	)
);

CREATE COLUMN TABLE "REL_GROUPS_CS"(
    ID_GROUP    NVARCHAR(36),
    ID_CS        NVARCHAR(50),
    IS_TEAM_LEADER NVARCHAR(1)
	
	PRIMARY KEY (
		ID_GROUP,
		ID_CS
	)
);

-- Testi posizioni prezzo per operazione OdM
CREATE COLUMN TABLE "RA_DAILY_ODMOP_ACCOUNTING"(
	UUID_RA_DAILY_DETAIL NVARCHAR(36),
	ODA_POS NVARCHAR(10),
	ODA_POS_PRICE_ROW NVARCHAR(36),

	SHORT_DESC	NVARCHAR(50),
	LONG_DESC	NVARCHAR(200),
	QUANTITY DECIMAL(34, 5),
	UM NVARCHAR(10),	
	PRICE_FOR_UNIT DECIMAL(34, 5),
	CURRENCY NVARCHAR(3),

	IS_DELETED NVARCHAR(1), ------------------------------------ FLAG CHE INDICA LA CANCELLAZIONE LOGICA IN CASO DI ANNOTAZIONE
	UUID_SUPPLIER_RA_DETAIL_ACCOUNTING NVARCHAR(36), ------------------------------------ UUID CONTABILITA' ODM/OP ORIGINALE DEL RA IN CASO DI ANNOTAZIONE. SE VIENE AGGIUNTA UNA NUOVA CONTABILITA' (NON PRESENTE PRECEDENTEMENTE NEL RA DEL FORNITORE) SARA' VUOTO

	PRIMARY KEY (
		UUID_RA_DAILY_DETAIL,
		ODA_POS,
		ODA_POS_PRICE_ROW
	)
);

-- Tabella allegati servizi accessori RA
CREATE COLUMN TABLE "RA_DAILY_DETAIL_ATTACH_NONCORE_SERVICES"(
    UUID_RA_DAILY_HEAD_ATTACH NVARCHAR(36),
    UUID_RA_DAILY_HEAD NVARCHAR(36),
    
    DOCUMENTAL_FILENAME NVARCHAR(300),
    FILE_LOCATION NVARCHAR(3), --SCP / OTX
    FILENAME NVARCHAR(200),
    UPLOADED_BY NVARCHAR(100),
    UPLOADED_AT DATETIME,

	IS_DELETED NVARCHAR(1), ------------------------------------ FLAG CHE INDICA LA CANCELLAZIONE LOGICA IN CASO DI ANNOTAZIONE
	UUID_SUPPLIER_RA_DETAIL_ATTACH NVARCHAR(36), ------------------------------------ UUID ALLEGATO ODM/OP ORIGINALE DEL RA IN CASO DI ANNOTAZIONE. SE VIENE AGGIUNTO UN NUOVO ALLEGATO (NON PRESENTE PRECEDENTEMENTE NEL RA DEL FORNITORE) SARA' VUOTO
	PRIMARY KEY (
	    UUID_RA_DAILY_HEAD_ATTACH
	)
);

-- Tabella note servizi accessori RA
CREATE COLUMN TABLE "RA_DAILY_DETAIL_NOTES_NONCORE_SERVICES"(
    UUID_RA_DAILY_HEAD_NOTE NVARCHAR(36),
    UUID_RA_DAILY_HEAD NVARCHAR(36),
    TEXT NVARCHAR (250),
    CREATED_BY NVARCHAR(100),
    CREATED_AT DATETIME,
	
	IS_DELETED NVARCHAR(1), ------------------------------------ FLAG CHE INDICA LA CANCELLAZIONE LOGICA IN CASO DI ANNOTAZIONE
	UUID_SUPPLIER_RA_DETAIL_ATTACH NVARCHAR(36), ------------------------------------ UUID NOTA ODM/OP ORIGINALE DEL RA IN CASO DI ANNOTAZIONE. SE VIENE AGGIUNTA UNA NUOVA NOTA (NON PRESENTE PRECEDENTEMENTE NEL RA DEL FORNITORE) SARA' VUOTO
	PRIMARY KEY (
	    UUID_RA_DAILY_HEAD_NOTE
	)
);

-- Tabella lavoratore servizi accessori RA
CREATE COLUMN TABLE "RA_DAILY_DETAIL_WORKER_NONCORE_SERVICES"(
    UUID_RA_DAILY_HEAD_WORKER NVARCHAR(36),
    UUID_RA_DAILY_HEAD NVARCHAR(36),
    ID_WORKER NVARCHAR(50),
    TIME1_BEG DATETIME,
    TIME1_END DATETIME,
    TIME2_BEG DATETIME,
    TIME2_END DATETIME,
    TIME_BREAK DATETIME,
    TOTAL_HOURS INTEGER,
    
    CREATED_BY NVARCHAR(100),
    CREATED_AT DATETIME,
	IS_DELETED NVARCHAR(1), ------------------------------------ FLAG CHE INDICA LA CANCELLAZIONE LOGICA IN CASO DI ANNOTAZIONE
	
	UUID_SUPPLIER_RA_DETAIL_WORKER NVARCHAR(36), ------------------------------------ UUID LAVORATORE ODM/OP ORIGINALE DEL RA IN CASO DI ANNOTAZIONE. SE VIENE AGGIUNTO UN NUOVO LAVORATORE (NON PRESENTE PRECEDENTEMENTE NEL RA DEL FORNITORE) SARA' VUOTO
	PRIMARY KEY (
	    UUID_RA_DAILY_HEAD_WORKER
	)
);

-- Tabella veicoli servizi accessori RA
CREATE COLUMN TABLE "RA_DAILY_DETAIL_VEHICLE_NONCORE_SERVICES"(
    UUID_RA_DAILY_HEAD_VEHICLE NVARCHAR(36),
    UUID_RA_DAILY_HEAD NVARCHAR(36),
    ID_VEHICLE NVARCHAR(50),
    TIME1_BEG DATETIME,
    TIME1_END DATETIME,
    TIME2_BEG DATETIME,
    TIME2_END DATETIME,
    TIME_BREAK DATETIME,
    TOTAL_HOURS INTEGER,
    
    CREATED_BY NVARCHAR(100),
    CREATED_AT DATETIME,
	IS_DELETED NVARCHAR(1), ------------------------------------ FLAG CHE INDICA LA CANCELLAZIONE LOGICA IN CASO DI ANNOTAZIONE
	UUID_SUPPLIER_RA_DETAIL_VEHICLE NVARCHAR(36), ------------------------------------ UUID VEICOLO ODM/OP ORIGINALE DEL RA IN CASO DI ANNOTAZIONE. SE VIENE AGGIUNTO UN NUOVO VEICOLO (NON PRESENTE PRECEDENTEMENTE NEL RA DEL FORNITORE) SARA' VUOTO
	PRIMARY KEY (
	    UUID_RA_DAILY_HEAD_VEHICLE
	)
);


-- Tabella attrezzature servizi accessori RA
CREATE COLUMN TABLE "RA_DAILY_DETAIL_EQUIPMENT_NONCORE_SERVICES"(
    UUID_RA_DAILY_HEAD_EQUIPMENT NVARCHAR(36),
    UUID_RA_DAILY_HEAD NVARCHAR(36),
    ID_EQUIPMENT NVARCHAR(50),
    TIME1_BEG DATETIME,
    TIME1_END DATETIME,
    TIME2_BEG DATETIME,
    TIME2_END DATETIME,
    TIME_BREAK DATETIME,
    TOTAL_HOURS INTEGER,
    
    CREATED_BY NVARCHAR(100),
    CREATED_AT DATETIME,

	IS_DELETED NVARCHAR(1), ------------------------------------ FLAG CHE INDICA LA CANCELLAZIONE LOGICA IN CASO DI ANNOTAZIONE
	UUID_SUPPLIER_RA_DETAIL_EQUIPMENT NVARCHAR(36), ------------------------------------ UUID ATTREZZATURA ODM/OP ORIGINALE DEL RA IN CASO DI ANNOTAZIONE. SE VIENE AGGIUNTO UNA NUOVA ATTREZZATURA (NON PRESENTE PRECEDENTEMENTE NEL RA DEL FORNITORE) SARA' VUOTO
	
	PRIMARY KEY (
	    UUID_RA_DAILY_HEAD_EQUIPMENT
	)
);

-- Tabella testi stati GdL
CREATE COLUMN TABLE "GDL_STATUS_T"(
	    ID_GDL_STATUS_T INTEGER,
		SPRAS NVARCHAR(2),
		TEXT NVARCHAR(100),

	PRIMARY KEY (
	    ID_GDL_STATUS_T,
		SPRAS
	)
);
 
-- Tabella testi stati GdL
CREATE COLUMN TABLE "GDL_STATUS"(
	    ID_GDL_STATUS INTEGER,
		ID_GDL_STATUS_T INTEGER,
		
	PRIMARY KEY (
	    ID_GDL_STATUS
	)
);

-- Tabella GdL
CREATE COLUMN TABLE "GDL"(
    UUID_GDL NVARCHAR(36),
    VERSION INTEGER,  
    
    IS_ACTIVE_VERSION NVARCHAR(1), 
    IS_SUPPLIER_VERSION NVARCHAR(1), 
    FILENAME NVARCHAR(100),
    ID_GDL_STATUS INTEGER,
    START_DATE DATE,
    END_DATE DATE,
        
    DOCUMENT_NAME NVARCHAR(100),
    ID_CONTRACT NVARCHAR(20),
    ODA NVARCHAR(20),
        
    CREATED_BY NVARCHAR(100),
    CREATED_AT DATETIME,
	
	PRIMARY KEY (
	    UUID_GDL,
	    VERSION
	)
);